{"ast":null,"code":"var _jsxFileName = \"/home/luisemiranda/Projetos-GitHub/movie-library/src/components/MovieForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.movie\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const {\n      onSubmit\n    } = this.props;\n    onSubmit(this.state);\n  }\n\n  updateMovie(field, newValue) {\n    this.setState({\n      [field]: newValue\n    });\n  }\n\n  renderTitleInput() {\n    const {\n      title\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter title\",\n      value: title,\n      onChange: event => this.updateMovie('title', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderSubtitleInput() {\n    const {\n      subtitle\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Subtitle\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter subtitle\",\n      type: \"text\",\n      value: subtitle,\n      onChange: event => this.updateMovie('subtitle', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderImagePathInput() {\n    const {\n      imagePath\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"imagePath\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Image Path\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter image path\",\n      type: \"text\",\n      value: imagePath,\n      onChange: event => this.updateMovie('imagePath', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderStorylineInput() {\n    const {\n      storyline\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"storyLine\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Story Line\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter story line\",\n      as: \"textarea\",\n      value: storyline,\n      onChange: event => this.updateMovie('storyline', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderGenreSelection() {\n    const {\n      genre\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"genre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, \"Genre\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      value: genre,\n      onChange: event => this.updateMovie('genre', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, \"Action\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Comedy\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, \"Thriller\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"Fantasy\")));\n  }\n\n  renderRatingInput() {\n    const {\n      rating\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"rate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, \"Rate\"), /*#__PURE__*/React.createElement(Form.Control, {\n      placeholder: \"Enter rate\",\n      type: \"number\",\n      step: 0.1,\n      min: 0,\n      max: 5,\n      value: rating,\n      onChange: event => this.updateMovie('rating', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  renderSubmitButton() {\n    return /*#__PURE__*/React.createElement(Button, {\n      variant: \"warning\",\n      onClick: this.handleSubmit,\n      block: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, \"Submit\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, this.renderTitleInput(), this.renderSubtitleInput(), this.renderImagePathInput(), this.renderStorylineInput(), this.renderGenreSelection(), this.renderRatingInput(), this.renderSubmitButton());\n  }\n\n}\n\nMovieForm.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.number,\n    imagePath: PropTypes.string,\n    genre: PropTypes.string\n  }),\n  onSubmit: PropTypes.func.isRequired\n};\nMovieForm.defaultProps = {\n  movie: {\n    title: '',\n    subtitle: '',\n    storyline: '',\n    rating: 0,\n    imagePath: '',\n    genre: ''\n  }\n};\nexport default MovieForm;","map":{"version":3,"sources":["/home/luisemiranda/Projetos-GitHub/movie-library/src/components/MovieForm.js"],"names":["React","PropTypes","Form","Button","MovieForm","Component","constructor","props","state","movie","handleSubmit","bind","onSubmit","updateMovie","field","newValue","setState","renderTitleInput","title","event","target","value","renderSubtitleInput","subtitle","renderImagePathInput","imagePath","renderStorylineInput","storyline","renderGenreSelection","genre","renderRatingInput","rating","renderSubmitButton","render","propTypes","shape","string","number","func","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.movie };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const { onSubmit } = this.props;\n    onSubmit(this.state);\n  }\n\n  updateMovie(field, newValue) {\n    this.setState({ [field]: newValue });\n  }\n\n  renderTitleInput() {\n    const { title } = this.state;\n\n    return (\n      <Form.Group controlId=\"title\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control\n          type=\"text\"\n          placeholder=\"Enter title\"\n          value={title}\n          onChange={(event) => this.updateMovie('title', event.target.value)}\n        />\n      </Form.Group>\n    );\n  }\n\n  renderSubtitleInput() {\n    const { subtitle } = this.state;\n\n    return (\n      <Form.Group controlId=\"subtitle\">\n        <Form.Label>Subtitle</Form.Label>\n        <Form.Control\n          placeholder=\"Enter subtitle\"\n          type=\"text\"\n          value={subtitle}\n          onChange={(event) => this.updateMovie('subtitle', event.target.value)}\n        />\n      </Form.Group>\n    );\n  }\n\n  renderImagePathInput() {\n    const { imagePath } = this.state;\n\n    return (\n      <Form.Group controlId=\"imagePath\">\n        <Form.Label>Image Path</Form.Label>\n        <Form.Control\n          placeholder=\"Enter image path\"\n          type=\"text\"\n          value={imagePath}\n          onChange={(event) => this.updateMovie('imagePath', event.target.value)}\n        />\n      </Form.Group>\n    );\n  }\n\n  renderStorylineInput() {\n    const { storyline } = this.state;\n\n    return (\n      <Form.Group controlId=\"storyLine\">\n        <Form.Label>Story Line</Form.Label>\n        <Form.Control\n          placeholder=\"Enter story line\"\n          as=\"textarea\"\n          value={storyline}\n          onChange={(event) => this.updateMovie('storyline', event.target.value)}\n        />\n      </Form.Group>\n    );\n  }\n\n  renderGenreSelection() {\n    const { genre } = this.state;\n\n    return (\n      <Form.Group controlId=\"genre\">\n      <Form.Label>Genre</Form.Label>\n      <Form.Control\n        as=\"select\"\n        value={genre}\n        onChange={(event) => this.updateMovie('genre', event.target.value)}\n      >\n        <option>Action</option>\n        <option>Comedy</option>\n        <option>Thriller</option>\n        <option>Fantasy</option>\n      </Form.Control>\n    </Form.Group>\n    );\n  }\n\n  renderRatingInput() {\n    const { rating } = this.state;\n\n    return (\n      <Form.Group controlId=\"rate\">\n        <Form.Label>Rate</Form.Label>\n        <Form.Control\n          placeholder=\"Enter rate\"\n          type=\"number\"\n          step={0.1}\n          min={0}\n          max={5}\n          value={rating}\n          onChange={(event) => this.updateMovie('rating', event.target.value)}\n        />\n      </Form.Group>\n    );\n  }\n\n  renderSubmitButton() {\n    return (\n      <Button variant=\"warning\" onClick={this.handleSubmit} block>Submit</Button>\n    );\n  }\n\n  render() {\n    return (\n      <Form className=\"form\">\n        {this.renderTitleInput()}\n        {this.renderSubtitleInput()}\n        {this.renderImagePathInput()}\n        {this.renderStorylineInput()}\n        {this.renderGenreSelection()}\n        {this.renderRatingInput()}\n        {this.renderSubmitButton()}\n      </Form>\n    );\n  }\n}\n\nMovieForm.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.number,\n    imagePath: PropTypes.string,\n    genre: PropTypes.string,\n  }),\n  onSubmit: PropTypes.func.isRequired,\n};\n\nMovieForm.defaultProps = {\n  movie: {\n    title: '',\n    subtitle: '',\n    storyline: '',\n    rating: 0,\n    imagePath: '',\n    genre: '',\n  },\n};\n\nexport default MovieForm;\n"]},"metadata":{},"sourceType":"module"}