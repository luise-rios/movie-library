{"ast":null,"code":"var _jsxFileName = \"/home/luisemiranda/Projetos-GitHub/movie-library/src/components/MovieForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.movie\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const {\n      onSubmit\n    } = this.props;\n    onSubmit(this.state);\n  }\n\n  updateMovie(field, newValue) {\n    this.setState({\n      [field]: newValue\n    });\n  }\n\n  renderTitleInput() {\n    const {\n      title\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Insira o t\\xEDtulo\",\n      id: \"movie_title\",\n      type: \"text\",\n      className: \"validate\",\n      value: title,\n      onChange: event => this.updateMovie('title', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"movie_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"T\\xEDtulo\"));\n  }\n\n  renderSubtitleInput() {\n    const {\n      subtitle\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Insira o subt\\xEDtulo\",\n      id: \"movie_subtitle\",\n      type: \"text\",\n      value: subtitle,\n      onChange: event => this.updateMovie('subtitle', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"movie_subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"Subt\\xEDtulo\"));\n  }\n\n  renderImagePathInput() {\n    const {\n      imagePath\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Insira o caminho da imagem\",\n      id: \"movie_image\",\n      type: \"text\",\n      value: imagePath,\n      onChange: event => this.updateMovie('imagePath', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"movie_image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"Imagem\"));\n  }\n\n  renderStorylineInput() {\n    const {\n      storyline\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"movie_storyline\",\n      value: storyline,\n      onChange: event => this.updateMovie('storyline', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"movie_storyline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, \"Sinopse\"));\n  }\n\n  renderGenreSelection() {\n    const {\n      genre\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"movie_genre\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"G\\xEAnero\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"movie_genre\",\n      value: genre,\n      onChange: event => this.updateMovie('genre', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"action\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, \"A\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"comedy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, \"Com\\xE9dia\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"thriller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }\n    }, \"Suspense\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"fantasy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Fantasia\")));\n  }\n\n  renderRatingInput() {\n    const {\n      rating\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"D\\xEA a avalia\\xE7\\xE3o do filme\",\n      id: \"movie_rating\",\n      type: \"number\",\n      step: 0.1,\n      min: 0,\n      max: 5,\n      value: rating,\n      onChange: event => this.updateMovie('rating', event.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"movie_rating\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Avalia\\xE7\\xE3o\"));\n  }\n\n  renderSubmitButton() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, \"Submit\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, this.renderTitleInput(), this.renderSubtitleInput(), this.renderImagePathInput(), this.renderStorylineInput(), this.renderGenreSelection(), this.renderRatingInput(), this.renderSubmitButton()));\n  }\n\n}\n\nMovieForm.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.number,\n    imagePath: PropTypes.string,\n    genre: PropTypes.string\n  }),\n  onSubmit: PropTypes.func.isRequired\n};\nMovieForm.defaultProps = {\n  movie: {\n    title: '',\n    subtitle: '',\n    storyline: '',\n    rating: 0,\n    imagePath: '',\n    genre: ''\n  }\n};\nexport default MovieForm;","map":{"version":3,"sources":["/home/luisemiranda/Projetos-GitHub/movie-library/src/components/MovieForm.js"],"names":["React","PropTypes","Form","MovieForm","Component","constructor","props","state","movie","handleSubmit","bind","onSubmit","updateMovie","field","newValue","setState","renderTitleInput","title","event","target","value","renderSubtitleInput","subtitle","renderImagePathInput","imagePath","renderStorylineInput","storyline","renderGenreSelection","genre","renderRatingInput","rating","renderSubmitButton","render","propTypes","shape","string","number","func","isRequired","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAE,GAAGD,KAAK,CAACE;AAAX,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,GAAG;AACb,UAAM;AAAEE,MAAAA;AAAF,QAAe,KAAKL,KAA1B;AACAK,IAAAA,QAAQ,CAAC,KAAKJ,KAAN,CAAR;AACD;;AAEDK,EAAAA,WAAW,CAACC,KAAD,EAAQC,QAAR,EAAkB;AAC3B,SAAKC,QAAL,CAAc;AAAE,OAACF,KAAD,GAASC;AAAX,KAAd;AACD;;AAEDE,EAAAA,gBAAgB,GAAG;AACjB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKV,KAAvB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,WAAW,EAAC,oBADd;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,SAAS,EAAC,UAJZ;AAKE,MAAA,KAAK,EAAEU,KALT;AAME,MAAA,QAAQ,EAAGC,KAAD,IAAW,KAAKN,WAAL,CAAiB,OAAjB,EAA0BM,KAAK,CAACC,MAAN,CAAaC,KAAvC,CANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATF,CADF;AAaD;;AAEDC,EAAAA,mBAAmB,GAAG;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKf,KAA1B;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,WAAW,EAAC,uBADd;AAEE,MAAA,EAAE,EAAC,gBAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAEe,QAJT;AAKE,MAAA,QAAQ,EAAGJ,KAAD,IAAW,KAAKN,WAAL,CAAiB,UAAjB,EAA6BM,KAAK,CAACC,MAAN,CAAaC,KAA1C,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAO,MAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARF,CADF;AAYD;;AAEDG,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKjB,KAA3B;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,WAAW,EAAC,4BADd;AAEE,MAAA,EAAE,EAAC,aAFL;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAEiB,SAJT;AAKE,MAAA,QAAQ,EAAGN,KAAD,IAAW,KAAKN,WAAL,CAAiB,WAAjB,EAA8BM,KAAK,CAACC,MAAN,CAAaC,KAA3C,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAQE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CADF;AAYD;;AAEDK,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKnB,KAA3B;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,iBADL;AAEE,MAAA,KAAK,EAAEmB,SAFT;AAGE,MAAA,QAAQ,EAAGR,KAAD,IAAW,KAAKN,WAAL,CAAiB,WAAjB,EAA8BM,KAAK,CAACC,MAAN,CAAaC,KAA3C,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAME;AAAO,MAAA,OAAO,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CADF;AAUD;;AAEDO,EAAAA,oBAAoB,GAAG;AACrB,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKrB,KAAvB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,KAAK,EAAEqB,KAFT;AAGE,MAAA,QAAQ,EAAGV,KAAD,IAAW,KAAKN,WAAL,CAAiB,OAAjB,EAA0BM,KAAK,CAACC,MAAN,CAAaC,KAAvC,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,CAFF,CADF;AAeD;;AAEDS,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKvB,KAAxB;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,WAAW,EAAC,kCADd;AAEE,MAAA,EAAE,EAAC,cAFL;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,IAAI,EAAE,GAJR;AAKE,MAAA,GAAG,EAAE,CALP;AAME,MAAA,GAAG,EAAE,CANP;AAOE,MAAA,KAAK,EAAEuB,MAPT;AAQE,MAAA,QAAQ,EAAGZ,KAAD,IAAW,KAAKN,WAAL,CAAiB,QAAjB,EAA2BM,KAAK,CAACC,MAAN,CAAaC,KAAxC,CARvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAWE;AAAO,MAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAXF,CADF;AAeD;;AAEDW,EAAAA,kBAAkB,GAAG;AACnB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,OAAO,EAAE,KAAKtB,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF;AAUD;;AAEDuB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhB,gBAAL,EADH,EAEG,KAAKK,mBAAL,EAFH,EAGG,KAAKE,oBAAL,EAHH,EAIG,KAAKE,oBAAL,EAJH,EAKG,KAAKE,oBAAL,EALH,EAMG,KAAKE,iBAAL,EANH,EAOG,KAAKE,kBAAL,EAPH,CADF,CADF;AAaD;;AAtJqC;;AAyJxC5B,SAAS,CAAC8B,SAAV,GAAsB;AACpBzB,EAAAA,KAAK,EAAEP,SAAS,CAACiC,KAAV,CAAgB;AACrBjB,IAAAA,KAAK,EAAEhB,SAAS,CAACkC,MADI;AAErBb,IAAAA,QAAQ,EAAErB,SAAS,CAACkC,MAFC;AAGrBT,IAAAA,SAAS,EAAEzB,SAAS,CAACkC,MAHA;AAIrBL,IAAAA,MAAM,EAAE7B,SAAS,CAACmC,MAJG;AAKrBZ,IAAAA,SAAS,EAAEvB,SAAS,CAACkC,MALA;AAMrBP,IAAAA,KAAK,EAAE3B,SAAS,CAACkC;AANI,GAAhB,CADa;AASpBxB,EAAAA,QAAQ,EAAEV,SAAS,CAACoC,IAAV,CAAeC;AATL,CAAtB;AAYAnC,SAAS,CAACoC,YAAV,GAAyB;AACvB/B,EAAAA,KAAK,EAAE;AACLS,IAAAA,KAAK,EAAE,EADF;AAELK,IAAAA,QAAQ,EAAE,EAFL;AAGLI,IAAAA,SAAS,EAAE,EAHN;AAILI,IAAAA,MAAM,EAAE,CAJH;AAKLN,IAAAA,SAAS,EAAE,EALN;AAMLI,IAAAA,KAAK,EAAE;AANF;AADgB,CAAzB;AAWA,eAAezB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form } from 'react-bootstrap';\n\nclass MovieForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...props.movie };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit() {\n    const { onSubmit } = this.props;\n    onSubmit(this.state);\n  }\n\n  updateMovie(field, newValue) {\n    this.setState({ [field]: newValue });\n  }\n\n  renderTitleInput() {\n    const { title } = this.state;\n\n    return (\n      <div>\n        <input\n          placeholder=\"Insira o título\"\n          id=\"movie_title\"\n          type=\"text\"\n          className=\"validate\"\n          value={title}\n          onChange={(event) => this.updateMovie('title', event.target.value)}\n        />\n        <label htmlFor=\"movie_title\">Título</label>\n      </div>\n    );\n  }\n\n  renderSubtitleInput() {\n    const { subtitle } = this.state;\n\n    return (\n      <div>\n        <input\n          placeholder=\"Insira o subtítulo\"\n          id=\"movie_subtitle\"\n          type=\"text\"\n          value={subtitle}\n          onChange={(event) => this.updateMovie('subtitle', event.target.value)}\n        />\n        <label htmlFor=\"movie_subtitle\">Subtítulo</label>\n      </div>\n    );\n  }\n\n  renderImagePathInput() {\n    const { imagePath } = this.state;\n\n    return (\n      <div className=\"row\">\n        <input\n          placeholder=\"Insira o caminho da imagem\"\n          id=\"movie_image\"\n          type=\"text\"\n          value={imagePath}\n          onChange={(event) => this.updateMovie('imagePath', event.target.value)}\n        />\n        <label htmlFor=\"movie_image\">Imagem</label>\n      </div>\n    );\n  }\n\n  renderStorylineInput() {\n    const { storyline } = this.state;\n\n    return (\n      <div>\n        <textarea\n          id=\"movie_storyline\"\n          value={storyline}\n          onChange={(event) => this.updateMovie('storyline', event.target.value)}\n        />\n        <label htmlFor=\"movie_storyline\">Sinopse</label>\n      </div>\n    );\n  }\n\n  renderGenreSelection() {\n    const { genre } = this.state;\n\n    return (\n      <div>\n        <label htmlFor=\"movie_genre\">Gênero</label>\n        <select\n          id=\"movie_genre\"\n          value={genre}\n          onChange={(event) => this.updateMovie('genre', event.target.value)}\n        >\n          <option value=\"action\">Ação</option>\n          <option value=\"comedy\">Comédia</option>\n          <option value=\"thriller\">Suspense</option>\n          <option value=\"fantasy\">Fantasia</option>\n        </select>\n      </div>\n    );\n  }\n\n  renderRatingInput() {\n    const { rating } = this.state;\n\n    return (\n      <div>\n        <input\n          placeholder=\"Dê a avaliação do filme\"\n          id=\"movie_rating\"\n          type=\"number\"\n          step={0.1}\n          min={0}\n          max={5}\n          value={rating}\n          onChange={(event) => this.updateMovie('rating', event.target.value)}\n        />\n        <label htmlFor=\"movie_rating\">Avaliação</label>\n      </div>\n    );\n  }\n\n  renderSubmitButton() {\n    return (\n      <div>\n        <button\n          type=\"button\"\n          onClick={this.handleSubmit}\n        >\n          Submit\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <Form>\n          {this.renderTitleInput()}\n          {this.renderSubtitleInput()}\n          {this.renderImagePathInput()}\n          {this.renderStorylineInput()}\n          {this.renderGenreSelection()}\n          {this.renderRatingInput()}\n          {this.renderSubmitButton()}\n        </Form>\n      </div>\n    );\n  }\n}\n\nMovieForm.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n    storyline: PropTypes.string,\n    rating: PropTypes.number,\n    imagePath: PropTypes.string,\n    genre: PropTypes.string,\n  }),\n  onSubmit: PropTypes.func.isRequired,\n};\n\nMovieForm.defaultProps = {\n  movie: {\n    title: '',\n    subtitle: '',\n    storyline: '',\n    rating: 0,\n    imagePath: '',\n    genre: '',\n  },\n};\n\nexport default MovieForm;\n"]},"metadata":{},"sourceType":"module"}