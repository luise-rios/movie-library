{"ast":null,"code":"var _jsxFileName = \"/home/luisemiranda/sd-07-project-movie-card-library-crud/src/pages/EditMovie.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movie: {},\n      status: '',\n      shouldRedirect: false\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.requestMovie = this.requestMovie.bind(this);\n  }\n\n  componentDidMount() {\n    this.requestMovie();\n  }\n\n  requestMovie() {\n    const {\n      id\n    } = this.props.match.params;\n    this.setState({\n      status: 'loading'\n    }, async () => {\n      const requestMovie = await movieAPI.getMovie(id);\n      this.setState({\n        status: '',\n        movie: requestMovie\n      });\n    });\n  }\n\n  handleSubmit(updatedMovie) {\n    this.setState({\n      status: 'loading'\n    }, async () => {\n      const requestUpdate = await movieAPI.updateMovie(updatedMovie);\n      this.setState({\n        status: requestUpdate,\n        shouldRedirect: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      status,\n      shouldRedirect,\n      movie\n    } = this.state;\n\n    if (shouldRedirect) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (status === 'loading') {\n      return /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"edit-movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MovieForm, {\n      movie: movie,\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired\n};\nexport default EditMovie;","map":{"version":3,"sources":["/home/luisemiranda/sd-07-project-movie-card-library-crud/src/pages/EditMovie.js"],"names":["React","Component","Redirect","PropTypes","Loading","MovieForm","movieAPI","EditMovie","constructor","state","movie","status","shouldRedirect","handleSubmit","bind","requestMovie","componentDidMount","id","props","match","params","setState","getMovie","updatedMovie","requestUpdate","updateMovie","render","propTypes","shape","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,eAAnC;AACA,OAAO,KAAKC,QAAZ,MAA0B,sBAA1B;;AAEA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAChCO,EAAAA,WAAW,GAAG;AACZ;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,cAAc,EAAE;AAHL,KAAb;AAMA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKD,YAAL;AACD;;AAEDA,EAAAA,YAAY,GAAG;AACb,UAAM;AAAEE,MAAAA;AAAF,QAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AACA,SAAKC,QAAL,CAAc;AAAEV,MAAAA,MAAM,EAAE;AAAV,KAAd,EAAqC,YAAY;AAC/C,YAAMI,YAAY,GAAG,MAAMT,QAAQ,CAACgB,QAAT,CAAkBL,EAAlB,CAA3B;AACA,WAAKI,QAAL,CAAc;AACZV,QAAAA,MAAM,EAAE,EADI;AAEZD,QAAAA,KAAK,EAAEK;AAFK,OAAd;AAID,KAND;AAOD;;AAEDF,EAAAA,YAAY,CAACU,YAAD,EAAe;AACzB,SAAKF,QAAL,CAAc;AAAEV,MAAAA,MAAM,EAAE;AAAV,KAAd,EAAqC,YAAY;AAC/C,YAAMa,aAAa,GAAG,MAAMlB,QAAQ,CAACmB,WAAT,CAAqBF,YAArB,CAA5B;AACA,WAAKF,QAAL,CAAc;AACZV,QAAAA,MAAM,EAAEa,aADI;AAEZZ,QAAAA,cAAc,EAAE;AAFJ,OAAd;AAID,KAND;AAOD;;AAEDc,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA,MAAF;AAAUC,MAAAA,cAAV;AAA0BF,MAAAA;AAA1B,QAAoC,KAAKD,KAA/C;;AACA,QAAIG,cAAJ,EAAoB;AAClB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAID,MAAM,KAAK,SAAf,EAA0B;AACxB,0BAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,wBACE;AAAK,qBAAY,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAED,KAAlB;AAAyB,MAAA,QAAQ,EAAE,KAAKG,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD;;AAtD+B;;AAyDlCN,SAAS,CAACoB,SAAV,GAAsB;AACpBR,EAAAA,KAAK,EAAEhB,SAAS,CAACyB,KAAV,CAAgB;AACrBR,IAAAA,MAAM,EAAEjB,SAAS,CAACyB,KAAV,CAAgB;AACtBX,MAAAA,EAAE,EAAEd,SAAS,CAAC0B,MAAV,CAAiBC;AADC,KAAhB,EAELA;AAHkB,GAAhB,EAIJA;AALiB,CAAtB;AAQA,eAAevB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movie: {},\n      status: '',\n      shouldRedirect: false,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.requestMovie = this.requestMovie.bind(this);\n  }\n\n  componentDidMount() {\n    this.requestMovie();\n  }\n\n  requestMovie() {\n    const { id } = this.props.match.params;\n    this.setState({ status: 'loading' }, async () => {\n      const requestMovie = await movieAPI.getMovie(id);\n      this.setState({\n        status: '',\n        movie: requestMovie,\n      });\n    });\n  }\n\n  handleSubmit(updatedMovie) {\n    this.setState({ status: 'loading' }, async () => {\n      const requestUpdate = await movieAPI.updateMovie(updatedMovie);\n      this.setState({\n        status: requestUpdate,\n        shouldRedirect: true,\n      });\n    });\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\">\n        <MovieForm movie={movie} onSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}