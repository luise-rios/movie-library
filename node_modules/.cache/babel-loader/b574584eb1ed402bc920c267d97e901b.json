{"ast":null,"code":"import _regeneratorRuntime from\"/home/luisemiranda/Projetos-GitHub/movie-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/luisemiranda/Projetos-GitHub/movie-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/home/luisemiranda/Projetos-GitHub/movie-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/luisemiranda/Projetos-GitHub/movie-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/luisemiranda/Projetos-GitHub/movie-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/luisemiranda/Projetos-GitHub/movie-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/luisemiranda/Projetos-GitHub/movie-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Redirect}from'react-router-dom';import{Loading,MovieForm}from'../components';import*as movieAPI from'../services/movieAPI';var EditMovie=/*#__PURE__*/function(_Component){_inherits(EditMovie,_Component);var _super=_createSuper(EditMovie);function EditMovie(){var _this;_classCallCheck(this,EditMovie);_this=_super.call(this);_this.state={movie:{},status:'',shouldRedirect:false};_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.requestMovie=_this.requestMovie.bind(_assertThisInitialized(_this));return _this;}_createClass(EditMovie,[{key:\"componentDidMount\",value:function componentDidMount(){this.requestMovie();}},{key:\"requestMovie\",value:function requestMovie(){var _this2=this;var id=this.props.match.params.id;this.setState({status:'loading'},/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var requestMovie;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return movieAPI.getMovie(id);case 2:requestMovie=_context.sent;_this2.setState({status:'',movie:requestMovie});case 4:case\"end\":return _context.stop();}}},_callee);})));}},{key:\"handleSubmit\",value:function handleSubmit(updatedMovie){var _this3=this;this.setState({status:'loading'},/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var requestUpdate;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return movieAPI.updateMovie(updatedMovie);case 2:requestUpdate=_context2.sent;_this3.setState({status:requestUpdate,shouldRedirect:true});case 4:case\"end\":return _context2.stop();}}},_callee2);})));}},{key:\"render\",value:function render(){var _this$state=this.state,status=_this$state.status,shouldRedirect=_this$state.shouldRedirect,movie=_this$state.movie;if(shouldRedirect){return/*#__PURE__*/React.createElement(Redirect,{to:\"/movie-library\"});}if(status==='loading'){return/*#__PURE__*/React.createElement(Loading,null);}return/*#__PURE__*/React.createElement(\"div\",{\"data-testid\":\"edit-movie\",className:\"edit-container\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Edit Movie\"),/*#__PURE__*/React.createElement(MovieForm,{movie:movie,onSubmit:this.handleSubmit}));}}]);return EditMovie;}(Component);export default EditMovie;","map":{"version":3,"sources":["/home/luisemiranda/Projetos-GitHub/movie-library/src/pages/EditMovie.js"],"names":["React","Component","Redirect","Loading","MovieForm","movieAPI","EditMovie","state","movie","status","shouldRedirect","handleSubmit","bind","requestMovie","id","props","match","params","setState","getMovie","updatedMovie","updateMovie","requestUpdate"],"mappings":"8oCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,kBAAzB,CAGA,OAASC,OAAT,CAAkBC,SAAlB,KAAmC,eAAnC,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,sBAA1B,C,GAEMC,CAAAA,S,sGACJ,oBAAc,2CACZ,wBAEA,MAAKC,KAAL,CAAa,CACXC,KAAK,CAAE,EADI,CAEXC,MAAM,CAAE,EAFG,CAGXC,cAAc,CAAE,KAHL,CAAb,CAMA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBC,IAAlB,+BAApB,CACA,MAAKC,YAAL,CAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB,CAVY,aAWb,C,mFAEmB,CAClB,KAAKC,YAAL,GACD,C,mDAEc,oBACLC,CAAAA,EADK,CACE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADnB,CACLH,EADK,CAEb,KAAKI,QAAL,CAAc,CAAET,MAAM,CAAE,SAAV,CAAd,sEAAqC,0KACRJ,CAAAA,QAAQ,CAACc,QAAT,CAAkBL,EAAlB,CADQ,QAC7BD,YAD6B,eAEnC,MAAI,CAACK,QAAL,CAAc,CACZT,MAAM,CAAE,EADI,CAEZD,KAAK,CAAEK,YAFK,CAAd,EAFmC,sDAArC,IAOD,C,kDAEYO,Y,CAAc,iBACzB,KAAKF,QAAL,CAAc,CAAET,MAAM,CAAE,SAAV,CAAd,sEAAqC,iLACPJ,CAAAA,QAAQ,CAACgB,WAAT,CAAqBD,YAArB,CADO,QAC7BE,aAD6B,gBAEnC,MAAI,CAACJ,QAAL,CAAc,CACZT,MAAM,CAAEa,aADI,CAEZZ,cAAc,CAAE,IAFJ,CAAd,EAFmC,wDAArC,IAOD,C,uCAEQ,iBACmC,KAAKH,KADxC,CACCE,MADD,aACCA,MADD,CACSC,cADT,aACSA,cADT,CACyBF,KADzB,aACyBA,KADzB,CAEP,GAAIE,cAAJ,CAAoB,CAClB,mBAAO,oBAAC,QAAD,EAAU,EAAE,CAAC,gBAAb,EAAP,CACD,CAED,GAAID,MAAM,GAAK,SAAf,CAA0B,CACxB,mBAAO,oBAAC,OAAD,MAAP,CACD,CAED,mBACE,2BAAK,cAAY,YAAjB,CAA8B,SAAS,CAAC,gBAAxC,eACE,2CADF,cAEE,oBAAC,SAAD,EAAW,KAAK,CAAED,KAAlB,CAAyB,QAAQ,CAAE,KAAKG,YAAxC,EAFF,CADF,CAMD,C,uBAvDqBV,S,EAkExB,cAAeK,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Loading, MovieForm } from '../components';\nimport * as movieAPI from '../services/movieAPI';\n\nclass EditMovie extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movie: {},\n      status: '',\n      shouldRedirect: false,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.requestMovie = this.requestMovie.bind(this);\n  }\n\n  componentDidMount() {\n    this.requestMovie();\n  }\n\n  requestMovie() {\n    const { id } = this.props.match.params;\n    this.setState({ status: 'loading' }, async () => {\n      const requestMovie = await movieAPI.getMovie(id);\n      this.setState({\n        status: '',\n        movie: requestMovie,\n      });\n    });\n  }\n\n  handleSubmit(updatedMovie) {\n    this.setState({ status: 'loading' }, async () => {\n      const requestUpdate = await movieAPI.updateMovie(updatedMovie);\n      this.setState({\n        status: requestUpdate,\n        shouldRedirect: true,\n      });\n    });\n  }\n\n  render() {\n    const { status, shouldRedirect, movie } = this.state;\n    if (shouldRedirect) {\n      return <Redirect to=\"/movie-library\" />;\n    }\n\n    if (status === 'loading') {\n      return <Loading />;\n    }\n\n    return (\n      <div data-testid=\"edit-movie\" className=\"edit-container\">\n        <h1>Edit Movie</h1>\n        <MovieForm movie={movie} onSubmit={this.handleSubmit} />\n      </div>\n    );\n  }\n}\n\nEditMovie.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default EditMovie;\n"]},"metadata":{},"sourceType":"module"}